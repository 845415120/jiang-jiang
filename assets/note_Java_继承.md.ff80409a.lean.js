import{_ as s,o as n,c as a,h as l}from"./app.0ca118e2.js";const p="/jiang-jiang/assets/01_super内存图.7d867300.png",o="/jiang-jiang/assets/02_权限修饰符.861220c2.png",b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"1. 继承","slug":"_1-继承","link":"#_1-继承","children":[{"level":3,"title":"1.1 继承的实现（掌握）","slug":"_1-1-继承的实现-掌握","link":"#_1-1-继承的实现-掌握","children":[]},{"level":3,"title":"1.2 继承的好处和弊端（理解）","slug":"_1-2-继承的好处和弊端-理解","link":"#_1-2-继承的好处和弊端-理解","children":[]},{"level":3,"title":"1.3. Java中继承的特点（掌握）","slug":"_1-3-java中继承的特点-掌握","link":"#_1-3-java中继承的特点-掌握","children":[]}]},{"level":2,"title":"2. 继承中的成员访问特点","slug":"_2-继承中的成员访问特点","link":"#_2-继承中的成员访问特点","children":[{"level":3,"title":"2.1 继承中变量的访问特点（掌握）","slug":"_2-1-继承中变量的访问特点-掌握","link":"#_2-1-继承中变量的访问特点-掌握","children":[]},{"level":3,"title":"2.2 super（掌握）","slug":"_2-2-super-掌握","link":"#_2-2-super-掌握","children":[]},{"level":3,"title":"2.3 继承中构造方法的访问特点（理解）","slug":"_2-3-继承中构造方法的访问特点-理解","link":"#_2-3-继承中构造方法的访问特点-理解","children":[]},{"level":3,"title":"2.4 继承中成员方法的访问特点（掌握）","slug":"_2-4-继承中成员方法的访问特点-掌握","link":"#_2-4-继承中成员方法的访问特点-掌握","children":[]},{"level":3,"title":"2.5 super内存图（理解）","slug":"_2-5-super内存图-理解","link":"#_2-5-super内存图-理解","children":[]},{"level":3,"title":"2.6 方法重写（掌握）","slug":"_2-6-方法重写-掌握","link":"#_2-6-方法重写-掌握","children":[]},{"level":3,"title":"2.7 方法重写的注意事项（掌握）","slug":"_2-7-方法重写的注意事项-掌握","link":"#_2-7-方法重写的注意事项-掌握","children":[]},{"level":3,"title":"2.8 权限修饰符 (理解)","slug":"_2-8-权限修饰符-理解","link":"#_2-8-权限修饰符-理解","children":[]},{"level":3,"title":"2.9 黑马信息管理系统使用继承改进 (掌握)","slug":"_2-9-黑马信息管理系统使用继承改进-掌握","link":"#_2-9-黑马信息管理系统使用继承改进-掌握","children":[]}]},{"level":2,"title":"3.抽象类","slug":"_3-抽象类","link":"#_3-抽象类","children":[{"level":3,"title":"3.1抽象类的概述（理解）","slug":"_3-1抽象类的概述-理解","link":"#_3-1抽象类的概述-理解","children":[]},{"level":3,"title":"3.2抽象类的特点（记忆）","slug":"_3-2抽象类的特点-记忆","link":"#_3-2抽象类的特点-记忆","children":[]},{"level":3,"title":"3.3抽象类的案例（应用）","slug":"_3-3抽象类的案例-应用","link":"#_3-3抽象类的案例-应用","children":[]},{"level":3,"title":"3.4模板设计模式","slug":"_3-4模板设计模式","link":"#_3-4模板设计模式","children":[]},{"level":3,"title":"3.5final（应用）","slug":"_3-5final-应用","link":"#_3-5final-应用","children":[]},{"level":3,"title":"3.6黑马信息管理系统使用抽象类改进 (应用)","slug":"_3-6黑马信息管理系统使用抽象类改进-应用","link":"#_3-6黑马信息管理系统使用抽象类改进-应用","children":[]}]},{"level":2,"title":"4.代码块","slug":"_4-代码块","link":"#_4-代码块","children":[{"level":3,"title":"4.1代码块概述 (理解)","slug":"_4-1代码块概述-理解","link":"#_4-1代码块概述-理解","children":[]},{"level":3,"title":"4.2代码块分类 (理解)","slug":"_4-2代码块分类-理解","link":"#_4-2代码块分类-理解","children":[]},{"level":3,"title":"4.3黑马信息管理系统使用代码块改进 (应用)","slug":"_4-3黑马信息管理系统使用代码块改进-应用","link":"#_4-3黑马信息管理系统使用代码块改进-应用","children":[]}]}],"relativePath":"note/Java/继承.md","lastUpdated":1694572171000}'),e={name:"note/Java/继承.md"},t=l("",56),r=[t];function c(D,y,F,i,B,A){return n(),a("div",null,r)}const u=s(e,[["render",c]]);export{b as __pageData,u as default};
